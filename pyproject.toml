[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "torchgbif"
authors = [
    {name = "Taimur Khan", email = "taimur.khan@ufz.de"},
]
description = "FAIR PyTorch DataLoaders and DataSets for GBIF data"
readme = "README.md"
license = {text = "MIT"}
keywords = ["pytorch", "gbif", "biodiversity", "machine-learning", "datasets"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.6.0",
    "requests>=2.25.0",
    "pandas>=1.3.0",
    "numpy>=1.26.0",
    "torchvision>=0.15.0",
    "tqdm>=4.62.0",
    "pyarrow>=8.0.0",
    "pygbif>=0.2.0",
    "hydra-core>=1.3.2",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "pre-commit>=2.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/thisistaimur/TorchGBIF"
Repository = "https://github.com/thisistaimur/TorchGBIF"
Documentation = "https://github.com/thisistaimur/TorchGBIF/blob/master/README.md"
"Bug Tracker" = "https://github.com/thisistaimur/TorchGBIF/issues"

[tool.setuptools]
packages = ["torchgbif"]

[tool.setuptools_scm]
write_to = "torchgbif/_version.py"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=torchgbif --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
source = ["torchgbif"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
